generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id
  username      String    @unique
  password_hash String
  sessions      Session[]
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Level {
  id                 Int                 @id @default(autoincrement())
  level              Int                 @unique
  exerciseId         Int?
  Exercise           Exercise?           @relation(fields: [exerciseId], references: [id])
  Chords             Chord[]             @relation("ChordToLevel")
  Chord_Progressions Chord_Progression[] @relation("Chord_ProgressionToLevel")
  Intervals          Interval[]          @relation("IntervalToLevel")
}

model Exercise {
  id              Int          @id
  type            ExerciseType
  userId          Int?
  Points          Int
  timeEnd         DateTime
  timePerQuestion DateTime
  timeStart       DateTime
  level           Level[]
}

model Interval {
  id        Int     @id @default(autoincrement())
  name      String
  halfsteps Int
  format    String
  Levels    Level[] @relation("IntervalToLevel")
}

model Chord {
  id     Int     @id @default(autoincrement())
  name   String
  type   String
  Levels Level[] @relation("ChordToLevel")
}

model Chord_Progression {
  id          Int     @id @default(autoincrement())
  name        String
  progression String
  Levels      Level[] @relation("Chord_ProgressionToLevel")
}

enum ExerciseType {
  INTERVAL
  CHORD
  CHORD_PROGRESSION
  CLAPBACK_PLAYBACK
}
